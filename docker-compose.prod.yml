version: "3.9"

services:
  php:
    build:
      context: ./.docker/php
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    volumes:
      - ./:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - mysql
      - redis
    networks:
      - app
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./.docker/nginx/conf/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - php
    networks:
      - app
    restart: always

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  mysql:
    image: mysql:8.0
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s
    restart: always

  redis:
    image: redis:alpine
    volumes:
      - redisdata:/data
    networks:
      - app
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    restart: always

networks:
  app:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
